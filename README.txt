$ python3 perceptron.py --train_file data/challenge1.dat --iterations 5000
---------------------- parse data ---------------------
[[0.1244364  0.80335787 0.04944598 ... 0.96173475 0.04043913 1.        ]
 [0.9708402  0.73028664 0.97499608 ... 0.60961078 0.84416533 1.        ]
 [0.28902708 0.01577757 0.71251056 ... 0.29696998 0.10289358 1.        ]
 ...
 [0.64202371 0.35280691 0.65196567 ... 0.6114039  0.55740232 1.        ]
 [0.96291246 0.06693643 0.18751394 ... 0.82322828 0.95156589 1.        ]
 [0.76460335 0.53663985 0.73318323 ... 0.02272916 0.23586628 1.        ]]
[-1. -1.  1. ...  1. -1.  1.]
---------------------- training ---------------------
size of data:  4000
iterations 5000

Converged at: 4155th iterations
---------------------- result ---------------------
Train accuracy: 1.0
Feature weights (bias last): -7.041481377055892 -453.30486991359084 86.16504987953 -332.0175379613585 -490.44357166395827 84.87768725208167 -144.39624354313548 341.2220542188988 -579.8147681657225 370.2562733232363 82.04546960620826 496.4669646235532 57.42237160757858 138.21386925616684 -446.33988590094174 -89.17189695750639 -287.0977355484778 545.6231647743659 41.39053301201871 4.73896807210497 -433.97988078754344 -105.51492609600274 377.2512436060767 -35.94262989968571 318.217904550593 -260.7824683872749 380.94479414161617 -35.9815221205802 -313.675185822852 -32.11367156285925 120.0
R (maximun vector norm):  3.4301797073279428
δ (minimun seperation):  273.4330862324576
(R^2)/(δ^2) = 0.00016546992301202105

